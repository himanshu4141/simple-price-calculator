{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nlet PriceCalculatorComponent = class PriceCalculatorComponent {\n  constructor() {\n    this.seats = 1;\n    this.packageType = 'basic';\n    this.apiCalls = 0;\n    this.totalPrice = 0;\n  }\n  calculateTotalPrice() {\n    // Logic to calculate total price based on seats, package type, and API calls\n    const packagePrices = {\n      basic: 10,\n      standard: 20,\n      premium: 30\n    };\n    const basePrice = packagePrices[this.packageType] || 0;\n    this.totalPrice = basePrice * this.seats + this.apiCalls * 5; // Example calculation\n  }\n  onSeatsChange(newSeats) {\n    this.seats = newSeats;\n    this.calculateTotalPrice();\n  }\n  onPackageChange(newPackage) {\n    this.packageType = newPackage;\n    this.calculateTotalPrice();\n  }\n  onApiCallsChange(newApiCalls) {\n    this.apiCalls = newApiCalls;\n    this.calculateTotalPrice();\n  }\n};\nPriceCalculatorComponent = __decorate([Component({\n  selector: 'app-price-calculator',\n  templateUrl: './price-calculator.component.html',\n  styleUrls: ['./price-calculator.component.scss']\n})], PriceCalculatorComponent);\nexport { PriceCalculatorComponent };","map":null,"metadata":{},"sourceType":"module"}