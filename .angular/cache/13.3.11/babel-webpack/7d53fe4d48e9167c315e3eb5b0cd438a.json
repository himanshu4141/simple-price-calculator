{"ast":null,"code":"import { ActivatedRoute } from '@angular/router';\nimport { PricingService } from '../../services/pricing.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../../services/pricing.service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/common\";\nfunction CartPageComponent_option_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const package_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", package_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(package_r2.name);\n  }\n}\nfunction CartPageComponent_div_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"h3\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"currency\");\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Total Subscription Price: \", i0.ɵɵpipeBind1(3, 1, ctx_r1.totalPrice), \"\");\n  }\n}\nexport let CartPageComponent = /*#__PURE__*/(() => {\n  class CartPageComponent {\n    constructor(route, pricingService) {\n      this.route = route;\n      this.pricingService = pricingService;\n      this.selectedPdfPlan = '';\n      this.selectedSignPlan = '';\n      this.seats = 1;\n      this.packages = 0;\n      this.apiCalls = 0;\n      this.term = '1year';\n      this.productFamilies = [];\n      this.cartItems = [];\n      this.totalPrice = 0;\n    }\n    ngOnInit() {\n      this.pricingService.fetchPricingData().subscribe(data => {\n        this.productFamilies = data.productFamilies;\n        // Get selected plan from URL params if available\n        this.route.queryParams.subscribe(params => {\n          if (params['product'] && params['plan']) {\n            const family = params['product'];\n            const plan = params['plan'];\n            if (family.includes('PDF')) {\n              this.selectedPdfPlan = plan;\n            } else if (family.includes('Sign')) {\n              this.selectedSignPlan = plan;\n            }\n            if (params['term']) {\n              this.term = params['term'];\n            }\n            this.calculateTotal();\n          }\n        });\n      });\n    }\n    calculateTotal() {\n      this.cartItems = [];\n      this.totalPrice = 0;\n      // Calculate PDF plan price if selected\n      if (this.selectedPdfPlan) {\n        const pdfFamily = this.productFamilies.find(f => f.name === 'Nitro PDF');\n        if (pdfFamily) {\n          const price = this.pricingService.calculatePrice(pdfFamily, this.selectedPdfPlan, this.seats, 0, 0, this.term);\n          this.cartItems.push({\n            productFamily: 'Nitro PDF',\n            planName: this.selectedPdfPlan,\n            seats: this.seats,\n            term: this.term,\n            price: price\n          });\n          this.totalPrice += price;\n        }\n      }\n      // Calculate Sign plan price if selected\n      if (this.selectedSignPlan) {\n        const signFamily = this.productFamilies.find(f => f.name === 'Nitro Sign');\n        if (signFamily) {\n          const price = this.pricingService.calculatePrice(signFamily, this.selectedSignPlan, this.seats, this.packages, this.apiCalls, this.term);\n          this.cartItems.push({\n            productFamily: 'Nitro Sign',\n            planName: this.selectedSignPlan,\n            seats: this.seats,\n            packages: this.packages,\n            apiCalls: this.apiCalls,\n            term: this.term,\n            price: price\n          });\n          this.totalPrice += price;\n        }\n      }\n    }\n    getFreePackages() {\n      const signFamily = this.productFamilies.find(f => f.name === 'Nitro Sign');\n      if (signFamily && this.selectedSignPlan) {\n        const plan = signFamily.plans.find(p => p.name === this.selectedSignPlan);\n        if (plan === null || plan === void 0 ? void 0 : plan.freePackagesPerSeat) {\n          return this.seats * plan.freePackagesPerSeat;\n        }\n      }\n      return 0;\n    }\n  }\n  CartPageComponent.ɵfac = function CartPageComponent_Factory(t) {\n    return new (t || CartPageComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.PricingService));\n  };\n  CartPageComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CartPageComponent,\n    selectors: [[\"app-cart-page\"]],\n    decls: 20,\n    vars: 5,\n    consts: [[3, \"ngSubmit\"], [\"for\", \"seats\"], [\"type\", \"number\", \"id\", \"seats\", \"name\", \"seats\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"for\", \"packages\"], [\"id\", \"packages\", \"name\", \"packages\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"for\", \"apiCalls\"], [\"type\", \"number\", \"id\", \"apiCalls\", \"name\", \"apiCalls\", \"required\", \"\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\"], [4, \"ngIf\"], [3, \"value\"]],\n    template: function CartPageComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\")(1, \"h2\");\n        i0.ɵɵtext(2, \"Cart Page\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 0);\n        i0.ɵɵlistener(\"ngSubmit\", function CartPageComponent_Template_form_ngSubmit_3_listener() {\n          return ctx.calculateTotal();\n        });\n        i0.ɵɵelementStart(4, \"div\")(5, \"label\", 1);\n        i0.ɵɵtext(6, \"Number of Seats:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"input\", 2);\n        i0.ɵɵlistener(\"ngModelChange\", function CartPageComponent_Template_input_ngModelChange_7_listener($event) {\n          return ctx.seats = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(8, \"div\")(9, \"label\", 3);\n        i0.ɵɵtext(10, \"Select Package:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"select\", 4);\n        i0.ɵɵlistener(\"ngModelChange\", function CartPageComponent_Template_select_ngModelChange_11_listener($event) {\n          return ctx.selectedPackage = $event;\n        });\n        i0.ɵɵtemplate(12, CartPageComponent_option_12_Template, 2, 2, \"option\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\")(14, \"label\", 6);\n        i0.ɵɵtext(15, \"API Calls:\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"input\", 7);\n        i0.ɵɵlistener(\"ngModelChange\", function CartPageComponent_Template_input_ngModelChange_16_listener($event) {\n          return ctx.apiCalls = $event;\n        });\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(17, \"button\", 8);\n        i0.ɵɵtext(18, \"Calculate Total\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(19, CartPageComponent_div_19_Template, 4, 3, \"div\", 9);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngModel\", ctx.seats);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.selectedPackage);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.packages);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngModel\", ctx.apiCalls);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.totalPrice !== null);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.NgForm, i3.NumberValueAccessor, i3.DefaultValueAccessor, i3.RequiredValidator, i3.NgControlStatus, i3.NgModel, i3.SelectControlValueAccessor, i4.NgForOf, i3.NgSelectOption, i3.ɵNgSelectMultipleOption, i4.NgIf],\n    pipes: [i4.CurrencyPipe],\n    styles: [\".cart-page[_ngcontent-%COMP%]{padding:20px;background-color:#f9f9f9}.cart-header[_ngcontent-%COMP%]{font-size:24px;font-weight:700;margin-bottom:20px}.cart-item[_ngcontent-%COMP%]{display:flex;justify-content:space-between;padding:10px;border-bottom:1px solid #ddd}.cart-total[_ngcontent-%COMP%]{font-size:20px;font-weight:700;margin-top:20px}\"]\n  });\n  return CartPageComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}